#BlueJ class context
comment0.target=ReadingsArray
comment0.text=\r\n\ Supplier\ class\ for\ ReadingApp.\ \r\n\ \r\n\ @author\ Kai\ Richardson\r\n\ @version\ 1.0\r\n\ @since\ Fall\ 2019\r\n\ \r\n
comment1.params=filename
comment1.target=ReadingsArray(java.lang.String)
comment1.text=\r\n\ Instantiates\ a\ ReadingArray\ object\ to\ hold\ RGBReadings,\ reading\ the\ data\ from\ this\ file.\ \ \r\n\ <p>\r\n\ Note\:\ this\ will\ crash\ if\ the\ file\ is\ not\ structured\ the\ correct\ way.\ \r\n\ That's\ fine.\ \r\n\ </p>\r\n\ It\ will\ also\ throw\ the\ FileNotFoundException\ if\ the\ file\ cannot\ be\ opened.\ \r\n\ That's\ also\ fine.\r\n\r\n\ @param\ filename\ The\ name\ of\ the\ file\ to\ be\ sorted\ through.\r\n\ @throws\ FileNotFoundException\ if\ the\ file\ cannot\ be\ opened.\r\n
comment2.params=input
comment2.target=void\ load(java.util.Scanner)
comment2.text=\r\n\ Loads\ the\ array\ with\ color\ objects\r\n\r\n\ @param\ a\ The\ array\ being\ passed\ in.\r\n
comment3.params=
comment3.target=java.lang.String\ getDate()
comment3.text=\r\n\ Returns\ the\ date\ of\ these\ readings.\r\n\r\n\ @return\ the\ date\ of\ these\ readings.\r\n
comment4.params=
comment4.target=int\ getCount()
comment4.text=\r\n\ Returns\ the\ number\ of\ RGBReadings\ in\ this\ object.\r\n\r\n\ @return\ the\ number\ of\ RGBReadings\ in\ this\ object.\r\n
comment5.params=
comment5.target=RGBReading[]\ minMax()
comment5.text=\r\n\ Returns\ the\ RGBReadings\ with\ the\ shortest\ and\ longest\ times.\ \r\n\ <p>\r\n\ Shortest\ is\ stored\ at\ index\ [0],\ longest\ is\ at\ [1].\ \r\n\ The\ returned\ array\ has\ a\ length\ of\ 2.\r\n\ </p>\r\n\ \r\n\ @return\ the\ RGBReadings\ with\ the\ shortest\ and\ longest\ times.\ \r\n
comment6.params=
comment6.target=int\ posRedChangeCount()
comment6.text=\r\n\ Returns\ the\ count\ of\ how\ many\ times\ the\ red\ value\ increases\ between\ each\ sequential\ RGBReading,\ \r\n\ based\ on\ the\ order\ they\ are\ stored\ in\ the\ ReadingsArray\ object.\ \r\n\ <p>\r\n\ Specifically,\ this\ counts\ if\ the\ red\ value\ increases\ from\ the\ first\ RGBReading\ to\ the\ second,\ \r\n\ count\ if\ the\ red\ value\ increases\ between\ the\ second\ and\ third\ RGBReading,\ etc\r\n\ </p>\r\n\ \r\n\ @return\ the\ count\ of\ how\ many\ times\ the\ red\ value\ increases\ between\ each\ sequential\ RGBReading.\r\n
comment7.params=
comment7.target=RGBReading[]\ findSmallestGap()
comment7.text=\r\n\ Returns\ an\ array\ containing\ two\ RGBReading\ objects\ who\ had\ the\ smallest\ \r\n\ absolute\ value\ difference\ in\ brightness\ levels.\ \r\n\ <p>\r\n\ This\ is\ between\ any\ two\ RGBReadings\ in\ the\ ReadingsArray,\ not\ necessarily\ consecutive.\r\n\ </p>\r\n\r\n\ @return\ an\ array\ containing\ two\ RGBReading\ objects\r\n
comment8.params=filename
comment8.target=void\ save(java.lang.String)
comment8.text=\r\n\ Writes\ the\ brightness\ values\ for\ all\ the\ RGBReading\ objects\ to\ the\ file\ specified.\ \r\n\ <p>\r\n\ The\ first\ line\ of\ the\ file\ is\ the\ date,\ followed\ by\ each\ RGBReading\ name\ and\ its\ brightness,\ \r\n\ separated\ by\ a\ space.\ One\ RGBReading\ per\ line.\r\n\ </p>\r\n\r\n\ @param\ filename\ A\ parameter\r\n\ @throws\ FileNotFoundException\ for\ a\ null\ argument.\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Returns\ a\ String\ that\ represents\ the\ state\ of\ this\ object.\ \r\n\ <p>\r\n\ The\ String\ starts\ with\ the\ date,\ followed\ by\ the\ toString()\ for\ each\ RGBReading\ object,\ \r\n\ separated\ by\ a\ new\ line\ character.\r\n\ </p>\r\n\ \r\n\ @return\ a\ String\ that\ represents\ the\ state\ of\ this\ object.\r\n
numComments=10
